version: '3.8'

services:
  # Frontend Development Team Container
  frontend-team:
    image: node:18-alpine
    container_name: trading-frontend-team
    working_dir: /workspace
    environment:
      - TEAM_TYPE=frontend
      - NODE_ENV=development
    volumes:
      - ./frontend-workspace:/workspace
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "3000:3000"
      - "4200:4200"
    command: sh -c "npm install -g @angular/cli @vue/cli create-react-app && tail -f /dev/null"
    networks:
      - trading-network

  # Backend Development Team Container  
  backend-team:
    image: python:3.11-slim
    container_name: trading-backend-team
    working_dir: /workspace
    environment:
      - TEAM_TYPE=backend
      - DATABASE_URL=postgresql://trading_user:secure_password@postgresql:5432/trading
      - REDIS_URL=redis://redis:6379
    volumes:
      - ./backend-workspace:/workspace
    ports:
      - "8000:8000"
      - "5000:5000"
    command: sh -c "pip install fastapi uvicorn django flask sqlalchemy redis celery && tail -f /dev/null"
    depends_on:
      - postgresql
      - redis
    networks:
      - trading-network

  # Trading Analytics Team Container (mplfinance, Plotly, TA-Lib)
  trading-analytics-team:
    image: python:3.11-slim
    container_name: trading-analytics-team
    working_dir: /workspace
    environment:
      - TEAM_TYPE=trading_analytics
      - MARKET_DATA_FEED=development
      - JUPYTER_ENABLE_LAB=yes
    volumes:
      - ./trading-workspace:/workspace
      - ./market-data:/data
    ports:
      - "8080:8080"
      - "8888:8888"
    command: sh -c "
      apt-get update && 
      apt-get install -y build-essential gcc gfortran libatlas-base-dev && 
      pip install mplfinance plotly TA-Lib pandas numpy scipy jupyter yfinance websocket-client redis asyncio && 
      tail -f /dev/null"
    depends_on:
      - redis
    networks:
      - trading-network

  # DevOps Team Container
  devops-team:
    image: alpine:latest
    container_name: trading-devops-team
    working_dir: /workspace
    environment:
      - TEAM_TYPE=devops
    volumes:
      - ./devops-workspace:/workspace
      - /var/run/docker.sock:/var/run/docker.sock
    command: sh -c "
      apk add --no-cache docker docker-compose kubectl helm git bash curl && 
      tail -f /dev/null"
    privileged: true
    networks:
      - trading-network

  # Shared Services
  redis:
    image: redis:alpine
    container_name: trading-redis
    ports:
      - "6379:6379"
    networks:
      - trading-network

  postgresql:
    image: postgres:13
    container_name: trading-postgresql
    environment:
      - POSTGRES_DB=trading
      - POSTGRES_USER=trading_user
      - POSTGRES_PASSWORD=secure_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - trading-network

networks:
  trading-network:
    driver: bridge

volumes:
  postgres_data:
